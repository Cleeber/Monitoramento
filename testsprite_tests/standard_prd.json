{
  "meta": {
    "project": "Sistema de Monitoramento de Uptime",
    "date": "2025-09-09",
    "prepared_by": "Software Development Manager"
  },
  "product_overview": "Produto para monitoramento de disponibilidade (uptime) e performance de websites e serviços, oferecendo dashboard interativo, relatórios detalhados e notificações por e-mail, destinado a agências e equipes que gerenciam múltiplos domínios e serviços.",
  "core_goals": [
    "Detectar rapidamente indisponibilidades e lentidão nos serviços monitorados.",
    "Fornecer visão consolidada de uptime e tempos de resposta em períodos variados (24h, 7d, 30d).",
    "Organizar monitores em grupos para melhor gerenciamento e segmentação.",
    "Enviar alertas por e-mail em casos de falhas e suas recuperações.",
    "Gerar relatórios periódicos, incluindo relatórios mensais em PDF para stakeholders."
  ],
  "key_features": [
    "Dashboard interativo com estatísticas em tempo real via polling e visão histórica.",
    "CRUD completo de monitores suportando tipos HTTP, PING e TCP, com configuração de intervalos, timeout e associação a grupos.",
    "CRUD de grupos para organizar e filtrar monitores.",
    "Geração de relatórios de uptime, tempo médio de resposta, incidentes, incluindo relatórios mensais em PDF.",
    "Configuração e envio de notificações por e-mail via SMTP configurável, com registro de tentativas e erros.",
    "Autenticação segura via JWT com proteção de rotas no frontend e backend.",
    "Página pública de status configurável para exposição externa dos status dos serviços.",
    "Agendamento de verificações usando node-cron e monitoramento contínuo dos serviços.",
    "Segurança reforçada com Helmet, CORS, rate limiting, sanitização e armazenamento seguro de senhas."
  ],
  "user_flow_summary": [
    "Usuário realiza login com e-mail e senha, recebendo token JWT para acesso a rotas protegidas.",
    "Usuário acessa o dashboard para visualizar status e KPIs de todos os monitores.",
    "Usuário cria, edita e remove monitores e grupos para organizar os serviços a serem monitorados.",
    "Usuário configura SMTP e habilita notificações para receber alertas por e-mail quando um serviço falha ou recupera.",
    "Usuário gera ou agenda relatórios mensais em PDF que são armazenados e disponíveis para download ou envio por e-mail.",
    "Usuário pode acessar uma página pública de status para compartilhar informações externas sobre a disponibilidade dos serviços monitorados."
  ],
  "validation_criteria": [
    "Sistema deve refletir o status e uptime dos monitores no dashboard em até um ciclo de verificação.",
    "Notificações por e-mail devem ser enviadas corretamente nas transições de falha para recuperação e vice-versa com detalhes do incidente.",
    "Relatórios mensais devem conter KPIs corretos, incidentes detalhados e estar disponíveis para download em formato PDF.",
    "Autenticação deve proteger todas as rotas privadas, rejeitando acessos sem JWT válido.",
    "O agendador de tarefas deve restabelecer jobs após reinícios do sistema e garantir execuções conforme cronograma.",
    "A segurança deve incluir proteção contra ataques via CORS, rate limiting, sanitização de entradas e armazenamento seguro de credenciais.",
    "Interface deve ser responsiva e fornecer feedback claro em casos de erro ou carregamento."
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "React (Vite)",
      "TailwindCSS",
      "Express",
      "Node.js",
      "Supabase (Postgres, Storage, Auth)",
      "Zod",
      "JWT",
      "Node-cron",
      "Nodemailer",
      "PDFKit",
      "Puppeteer",
      "WS (WebSocket)"
    ],
    "features": [
      {
        "name": "Frontend - Roteamento e Proteção de Rotas",
        "description": "Roteamento com react-router-dom e guarda de rotas com ProtectedRoute, incluindo páginas públicas e privadas.",
        "files": [
          "frontend/src/App.tsx",
          "frontend/src/components/ProtectedRoute.tsx",
          "frontend/src/components/Layout.tsx",
          "frontend/src/pages/LoginPage.tsx",
          "frontend/src/pages/DashboardPage.tsx",
          "frontend/src/pages/DomainsPage.tsx",
          "frontend/src/pages/GroupsPage.tsx",
          "frontend/src/pages/StatusPage.tsx",
          "frontend/src/pages/SmtpConfigPage.tsx",
          "frontend/src/pages/ReportsPage.tsx",
          "frontend/src/pages/StatusPagesPage.tsx"
        ]
      },
      {
        "name": "Frontend - Contextos de Autenticação e Toasts",
        "description": "Contexto para autenticação de usuário e exibição de toasts globais.",
        "files": [
          "frontend/src/contexts/AuthContext.tsx",
          "frontend/src/contexts/ToastContext.tsx",
          "frontend/src/components/ui/toaster.tsx"
        ]
      },
      {
        "name": "Frontend - Configuração de Vite e Proxy",
        "description": "Vite configurado para rodar em porta 3000 (auto fallback para 3001) com proxy para backend em http://localhost:8081.",
        "files": [
          "frontend/vite.config.ts",
          "frontend/index.html"
        ]
      },
      {
        "name": "Backend - API Express com Segurança e Rate Limit",
        "description": "Servidor Express com Helmet, CORS, Compression e rate limiting. Autenticação JWT, middlewares e rotas privadas/públicas.",
        "files": [
          "backend/src/index.ts",
          "backend/src/services/DatabaseService.ts",
          "backend/src/lib/supabase.ts"
        ]
      },
      {
        "name": "Backend - Monitoramento e Scheduler",
        "description": "Serviço de monitoramento de uptime e agendamento de tarefas com node-cron.",
        "files": [
          "backend/src/monitoring/MonitoringService.ts",
          "backend/src/services/SchedulerService.ts"
        ]
      },
      {
        "name": "Backend - Relatórios e PDF",
        "description": "Geração de relatórios e PDFs, inclusive histórico mensal e exportação.",
        "files": [
          "backend/src/services/PDFService.ts",
          "backend/src/services/ReportService.ts"
        ]
      },
      {
        "name": "Backend - SMTP e Envio de Emails",
        "description": "Configuração, teste e envio de emails usando Nodemailer.",
        "files": [
          "backend/src/services/EmailService.ts",
          "backend/src/services/StorageService.ts"
        ]
      },
      {
        "name": "Banco de Dados - Migrações e Esquema",
        "description": "Scripts de migração e schema base usando Supabase Postgres.",
        "files": [
          "backend/database/schema.sql",
          "backend/database/migration-add-slugs.sql",
          "backend/database/migration-grupos.sql"
        ]
      }
    ]
  }
}
